services:
  go:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - neighborhood
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgis/postgis:17-3.5
    container_name: postgis
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgis_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"] # Usando o usu√°rio diretamente
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - neighborhood
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - neighborhood
    restart: unless-stopped

networks:
  neighborhood:
    driver: bridge

volumes:
  postgis_data:
    driver: local